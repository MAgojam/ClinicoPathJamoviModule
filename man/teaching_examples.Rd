% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_sequentialtests_examples.R
\docType{data}
\name{teaching_examples}
\alias{teaching_examples}
\title{Teaching Examples for Sequential Testing Concepts}
\format{
A data frame with 3 rows and 10 variables:
\describe{
\item{scenario}{Character. Teaching scenario name}
\item{test1_name}{Character. Name of first test}
\item{test1_sens}{Numeric. Sensitivity of first test}
\item{test1_spec}{Numeric. Specificity of first test}
\item{test2_name}{Character. Name of second test}
\item{test2_sens}{Numeric. Sensitivity of second test}
\item{test2_spec}{Numeric. Specificity of second test}
\item{prevalence}{Numeric. Disease prevalence}
\item{strategy}{Character. Testing strategy}
\item{teaching_point}{Character. Key learning objective}
}
}
\usage{
teaching_examples
}
\description{
Simplified examples designed for educational purposes to demonstrate
key concepts in sequential testing including perfect tests, complementary
testing, and sensitivity-specificity trade-offs.
}
\details{
Educational scenarios demonstrate:

\strong{Perfect Test Demonstration:}
\itemize{
\item Shows theoretical maximum improvement
\item Perfect specificity in confirmatory test
\item Illustrates concept of diagnostic certainty
}

\strong{Complementary Tests:}
\itemize{
\item Tests detect different disease subtypes
\item Parallel strategy captures all variants
\item Demonstrates additive diagnostic value
}

\strong{Trade-off Example:}
\itemize{
\item High sensitivity vs high specificity tests
\item Sequential strategy balances both needs
\item Shows optimization for clinical context
}
}
\examples{
# Load teaching examples
data(teaching_examples)

# Display teaching points
teaching_examples \%>\%
  select(scenario, teaching_point) \%>\%
  knitr::kable()

# Calculate and compare outcomes
teaching_examples \%>\%
  mutate(
    combined_sens = case_when(
      strategy == "serial_positive" ~ test1_sens * test2_sens,
      strategy == "parallel" ~ test1_sens + test2_sens - (test1_sens * test2_sens)
    ),
    combined_spec = case_when(
      strategy == "serial_positive" ~ test1_spec + (1 - test1_spec) * test2_spec,
      strategy == "parallel" ~ test1_spec * test2_spec
    ),
    improvement_type = case_when(
      combined_sens > pmax(test1_sens, test2_sens) ~ "Sensitivity improved",
      combined_spec > pmax(test1_spec, test2_spec) ~ "Specificity improved",
      TRUE ~ "Balanced improvement"
    )
  ) \%>\%
  select(scenario, improvement_type, combined_sens, combined_spec)

}
\seealso{
\code{\link{sequential_testing_examples}}
}
\keyword{datasets}
\keyword{diagnostic-concepts}
\keyword{education}
\keyword{teaching}
